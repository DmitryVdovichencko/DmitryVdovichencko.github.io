{"version":3,"file":"component---src-pages-articles-tsx-fb9086a71c3b051cd858.js","mappings":"8HAgBA,IATiBA,IAAkD,IAAjD,KAAEC,GAAqBD,EACvC,OACEE,EAAAA,cAAA,OAAKC,UAAU,yBAEbD,EAAAA,cAAA,QAAMC,UAAU,wBAAwBF,GACpC,C,mFCwDV,UAhDkBG,IAChB,MAAM,KAAEC,GAASD,EACjB,OACEF,EAAAA,cAACI,EAAAA,EAAM,KACLJ,EAAAA,cAACK,EAAAA,EAAG,CAACC,MAAM,wBACdN,EAAAA,cAAA,OAAKC,UAAU,uBACXE,EAAKI,OAAOC,MAAMC,KAAI,CAAAX,EAAWY,KAAK,IAAf,KAAEC,GAAMb,EAAA,OAClCE,EAAAA,cAACY,EAAAA,KAAI,CAACC,IAAM,GAAEF,EAAKG,OAAOC,QAAQL,IAASM,GAAIL,EAAKG,OAAOC,KAAMd,UAAU,6EAC3ED,EAAAA,cAAA,KAAGC,UAAU,iBAAiBU,EAAKM,YAAYX,OACnCN,EAAAA,cAACkB,EAAAA,EAAQ,CACXnB,MAhBWO,EAiBOK,EAAKM,YAAYX,MAjBN,YAAYa,KAAKb,GAkBxCK,EAAKM,YAAYG,OACjBT,EAAKM,YAAYI,WAnBZf,KA+CjB,KAGK,C","sources":["webpack://dimetrio-dev/./src/components/ui/PostDate/index.tsx","webpack://dimetrio-dev/./src/pages/articles.tsx"],"sourcesContent":["import React, { ComponentProps, FunctionComponent } from \"react\";\nimport { AiOutlineCalendar } from \"react-icons/ai\";\n\ninterface PostDateProps extends ComponentProps<FunctionComponent> {\n  date: string;\n}\n\nconst PostDate = ({ date }: PostDateProps): React.ReactElement => {\n  return (\n    <div className=\"text-sm text-gray-500\">\n      {/* <AiOutlineCalendar size=\"18px\" /> */}\n      <span className=\"ml-1 text-sm -mb-0.5\">{date}</span>\n    </div>\n  );\n};\n\nexport default PostDate;\n","import * as React from \"react\";\nimport { PageProps, graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout/\";\nimport { ArticleList } from \"../types/Articles\";\nimport Tag from \"../components/ui/Tag\";\nimport PostDate from \"../components/ui/PostDate\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardImage,\n} from \"../components/ui/Card\";\nimport SEO from \"../components/Seo\";\nconst isTitleCyrillic = (title: string) => /[aА-яЯ]/gm.test(title);\n\ninterface BlogProps extends PageProps {\n  data: ArticleList;\n}\n\nconst BlogPage = (props: BlogProps): React.ReactElement => {\n  const { data } = props;\n  return (\n    <Layout>\n      <SEO title=\"Articles | Dimetrio\" />\n\t\t\t<div className=\"flex flex-col gap-2\">\n      {data.allMdx.edges.map(({ node }, index) => (\n\t\t\t\t<Link key={`${node.fields.slug}_${index}`} to={node.fields.slug} className=\"flex flex-wrap justify-between items-center py-2 border-t border-gray-200\">\n\t\t\t\t<p className=\"min-w-[300px]\">{node.frontmatter.title}</p>\n\t\t\t\t            <PostDate\n              date={\n                isTitleCyrillic(node.frontmatter.title)\n                  ? node.frontmatter.dateRu\n                  : node.frontmatter.dateEn\n              }\n            />\n\t\t\t\t\t\t</Link>\n        // <Card\n\t\t\t\t//  key={`${node.fields.slug}_${index}`} linkTo={node.fields.slug}>\n        //   <CardImage\n        //     title={node.frontmatter.title}\n        //     data={node.frontmatter.cover}\n        //   />\n        //   <CardContent>\n        //     <CardHeader title={`${node.frontmatter.title}`} />\n        //     <PostDate\n        //       date={\n        //         isTitleCyrillic(node.frontmatter.title)\n        //           ? node.frontmatter.dateRu\n        //           : node.frontmatter.dateEn\n        //       }\n        //     />\n        //     <div className=\"flex flex-row flex-wrap items-baseline mt-4 mb-6\">\n        //       {node.frontmatter.tags.map((tag) => (\n        //         <div key={tag}>\n        //           <Tag title={tag} />\n        //         </div>\n        //       ))}\n        //     </div>\n        //     <CardDescription>{node.excerpt}</CardDescription>\n        //   </CardContent>\n        // </Card>\n      ))}\n\t\t\t</div>\n    </Layout>\n  );\n};\n\nexport default BlogPage;\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH, sizes: \"300px\")\n              }\n            }\n            dateRu: date(formatString: \"DD MMMM, YYYY\", locale: \"ru\")\n            dateEn: date(formatString: \"DD MMMM, YYYY\", locale: \"en\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","date","React","className","props","data","Layout","SEO","title","allMdx","edges","map","index","node","Link","key","fields","slug","to","frontmatter","PostDate","test","dateRu","dateEn"],"sourceRoot":""}